name: Build and Release Go Project

on:
  push:
    tags:
      - "v*" # Trigger on new tags starting with 'v' (e.g., v1.0.0)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          # TODO: can this just come from go.mod
          go-version: "1.25"

      - name: Build binaries
        # can these builds be parallelized? would that even matter?
        run: |
          GOOS=linux GOARCH=amd64 go build -o golf-server-linux-amd64 ./cmd
          GOOS=windows GOARCH=amd64 go build -o golf-server-windows-amd64.exe ./cmd
          GOOS=linux GOARCH=amd64 go build -o golf-linux-amd64 ./client-cmd
          GOOS=windows GOARCH=amd64 go build -o golf-windows-amd64.exe ./client-cmd

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux Server Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./golf-server-linux-amd64
          asset_name: golf-server-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Linux Client Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./golf-linux-amd64
          asset_name: golf-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Windows Client Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./golf-windows-amd64.exe
          asset_name: golf-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Windows Server Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./golf-server-windows-amd64.exe
          asset_name: golf-server-windows-amd64.exe
          asset_content_type: application/octet-stream
