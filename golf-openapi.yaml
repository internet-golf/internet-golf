components:
  schemas:
    DeploymentCreateInputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/DeploymentCreateInputBody.json
          format: uri
          readOnly: true
          type: string
        externalSource:
          type: string
        externalSourceType:
          type: string
        tags:
          items:
            type: string
          nullable: true
          type: array
        url:
          type: string
      required:
        - url
      type: object
    ErrorDetail:
      additionalProperties: false
      properties:
        location:
          description: Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
          type: string
        message:
          description: Error message text
          type: string
        value:
          description: The value at the given location
      type: object
    ErrorModel:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/ErrorModel.json
          format: uri
          readOnly: true
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          example: Property foo is required but is missing.
          type: string
        errors:
          description: Optional list of individual error details
          items:
            $ref: "#/components/schemas/ErrorDetail"
          nullable: true
          type: array
        instance:
          description: A URI reference that identifies the specific occurrence of the problem.
          example: https://example.com/error-log/abc123
          format: uri
          type: string
        status:
          description: HTTP status code
          example: 400
          format: int64
          type: integer
        title:
          description: A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
          example: Bad Request
          type: string
        type:
          default: about:blank
          description: A URI reference to human-readable documentation for the error.
          example: https://example.com/errors/example
          format: uri
          type: string
      type: object
    HealthCheckOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/HealthCheckOutputBody.json
          format: uri
          readOnly: true
          type: string
        ok:
          type: boolean
      required:
        - ok
      type: object
    SuccessOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/SuccessOutputBody.json
          format: uri
          readOnly: true
          type: string
        success:
          type: boolean
      required:
        - success
      type: object
info:
  title: Internet Golf API
  version: 0.5.0
openapi: 3.0.3
paths:
  /alive:
    get:
      operationId: get-alive
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheckOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get alive
  /deploy/files:
    put:
      operationId: put-deploy-files
      requestBody:
        content:
          multipart/form-data:
            encoding:
              contents:
                contentType: application/gzip,application/octet-stream
              keepLeadingDirectories:
                contentType: text/plain
              preserveExistingFiles:
                contentType: text/plain
              url:
                contentType: text/plain
            schema:
              properties:
                contents:
                  contentEncoding: binary
                  contentMediaType: application/octet-stream
                  format: binary
                  type: string
                keepLeadingDirectories:
                  type: boolean
                preserveExistingFiles:
                  type: boolean
                url:
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Put deploy files
  /deploy/new:
    post:
      operationId: post-deploy-new
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentCreateInputBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Post deploy new
